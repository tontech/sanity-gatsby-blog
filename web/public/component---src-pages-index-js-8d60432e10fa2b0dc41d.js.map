{"version":3,"sources":["webpack:///./src/components/blog-post-preview-list.js","webpack:///./src/pages/index.js"],"names":["BlogPostPreviewGrid","props","className","styles","root","title","headline","grid","nodes","map","node","key","id","isInList","browseMoreHref","browseMoreNav","to","defaultProps","query","IndexPage","data","errors","site","postNodes","posts","mapEdgesToNodes","filter","filterOutDocsWithoutSlugs","filterOutDocsPublishedInTheFuture","Error","description","keywords","hidden"],"mappings":"uKAMA,SAASA,EAAqBC,GAC5B,OACE,yBAAKC,UAAWC,IAAOC,MACpBH,EAAMI,OAAS,wBAAIH,UAAWC,IAAOG,UAAWL,EAAMI,OACvD,wBAAIH,UAAWC,IAAOI,MACnBN,EAAMO,OACLP,EAAMO,MAAMC,KAAI,SAAAC,GAAI,OAClB,wBAAIC,IAAKD,EAAKE,IACZ,kBAAC,IAAD,iBAAqBF,EAArB,CAA2BG,UAAQ,UAI1CZ,EAAMa,gBACL,yBAAKZ,UAAWC,IAAOY,eACrB,kBAAC,IAAD,CAAMC,GAAIf,EAAMa,gBAAhB,iBAOVd,EAAoBiB,aAAe,CACjCZ,MAAO,GACPG,MAAO,GACPM,eAAgB,IAGHd,Q,oCCjCf,sCAaO,IAAMkB,EAAK,aAkGHC,UA7CG,SAAAlB,GAAU,IACnBmB,EAAgBnB,EAAhBmB,KAAMC,EAAUpB,EAAVoB,OAEb,GAAIA,EACF,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAkBA,OAAQA,KAKhC,IAAMC,GAAQF,GAAQ,IAAIE,KACpBC,GAAaH,GAAQ,IAAII,MAC3BC,YAAgBL,EAAKI,OACpBE,OAAOC,KACPD,OAAOE,KACR,GAEJ,IAAKN,EACH,MAAM,IAAIO,MACR,iJAIJ,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACExB,MAAOiB,EAAKjB,MACZyB,YAAaR,EAAKQ,YAClBC,SAAUT,EAAKS,WAEjB,kBAAC,IAAD,KACE,wBAAIC,QAAM,GAAV,cAAuBV,EAAKjB,OAC3BkB,GACC,kBAAC,EAAD,CACElB,MAAM,oBACNG,MAAOe,EACPT,eAAe","file":"component---src-pages-index-js-8d60432e10fa2b0dc41d.js","sourcesContent":["import {Link} from 'gatsby'\nimport React from 'react'\nimport BlogPostPreview from './blog-post-preview'\n\nimport styles from './blog-post-preview-list.module.css'\n\nfunction BlogPostPreviewGrid (props) {\n  return (\n    <div className={styles.root}>\n      {props.title && <h2 className={styles.headline}>{props.title}</h2>}\n      <ul className={styles.grid}>\n        {props.nodes &&\n          props.nodes.map(node => (\n            <li key={node.id}>\n              <BlogPostPreview {...node} isInList />\n            </li>\n          ))}\n      </ul>\n      {props.browseMoreHref && (\n        <div className={styles.browseMoreNav}>\n          <Link to={props.browseMoreHref}>Browse more</Link>\n        </div>\n      )}\n    </div>\n  )\n}\n\nBlogPostPreviewGrid.defaultProps = {\n  title: '',\n  nodes: [],\n  browseMoreHref: ''\n}\n\nexport default BlogPostPreviewGrid\n","import React from 'react'\nimport {graphql} from 'gatsby'\nimport {\n  mapEdgesToNodes,\n  filterOutDocsWithoutSlugs,\n  filterOutDocsPublishedInTheFuture\n} from '../lib/helpers'\nimport BlogPostPreviewList from '../components/blog-post-preview-list'\nimport Container from '../components/container'\nimport GraphQLErrorList from '../components/graphql-error-list'\nimport SEO from '../components/seo'\nimport Layout from '../containers/layout'\n\nexport const query = graphql`\n  fragment SanityImage on SanityMainImage {\n    crop {\n      _key\n      _type\n      top\n      bottom\n      left\n      right\n    }\n    hotspot {\n      _key\n      _type\n      x\n      y\n      height\n      width\n    }\n    asset {\n      _id\n    }\n  }\n\n  query IndexPageQuery {\n    site: sanitySiteSettings(_id: { regex: \"/(drafts.|)siteSettings/\" }) {\n      title\n      description\n      keywords\n    }\n    posts: allSanityPost(\n      limit: 6\n      sort: { fields: [publishedAt], order: DESC }\n      filter: { slug: { current: { ne: null } }, publishedAt: { ne: null } }\n    ) {\n      edges {\n        node {\n          id\n          publishedAt\n          mainImage {\n            ...SanityImage\n            alt\n          }\n          title\n          _rawExcerpt\n          slug {\n            current\n          }\n        }\n      }\n    }\n  }\n`\n\nconst IndexPage = props => {\n  const {data, errors} = props\n\n  if (errors) {\n    return (\n      <Layout>\n        <GraphQLErrorList errors={errors} />\n      </Layout>\n    )\n  }\n\n  const site = (data || {}).site\n  const postNodes = (data || {}).posts\n    ? mapEdgesToNodes(data.posts)\n      .filter(filterOutDocsWithoutSlugs)\n      .filter(filterOutDocsPublishedInTheFuture)\n    : []\n\n  if (!site) {\n    throw new Error(\n      'Missing \"Site settings\". Open the studio at http://localhost:3333 and add some content to \"Site settings\" and restart the development server.'\n    )\n  }\n\n  return (\n    <Layout>\n      <SEO\n        title={site.title}\n        description={site.description}\n        keywords={site.keywords}\n      />\n      <Container>\n        <h1 hidden>Welcome to {site.title}</h1>\n        {postNodes && (\n          <BlogPostPreviewList\n            title='Latest blog posts'\n            nodes={postNodes}\n            browseMoreHref='/archive/'\n          />\n        )}\n      </Container>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}